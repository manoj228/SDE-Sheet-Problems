Example 1:

Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] is also accepted:

Example 2:

Input: nums = [1,3]
Output: [3,1]
Explanation: [1,3] and [3,1] are both a height-balanced BSTs.

// Time complexity : O(n)
// space complexity : O(1)
class Solution {
public:
    TreeNode *buildBST(vector<int> nums,int left, int right)
    {
        if(left > right) return NULL;
        
        int mid  = (left + right) >> 1;
        
        TreeNode *root = new TreeNode(nums[mid]);
        
        root -> left = buildBST(nums, left, mid - 1);
        
        root -> right = buildBST(nums, mid+1, right);
        
        return root;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        
        return buildBST(nums, 0, nums.size()-1);
    }
};
