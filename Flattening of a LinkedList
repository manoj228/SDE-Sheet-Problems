Example 1:

Input:
5 -> 10 -> 19 -> 28
|     |     |     | 
7     20    22   35
|           |     | 
8          50    40
|                 | 
30               45
Output:  5-> 7-> 8- > 10 -> 19-> 20->
22-> 28-> 30-> 35-> 40-> 45-> 50.
Explanation:
The resultant linked lists has every 
node in a single level.
(Note: | represents the bottom pointer.)



Node *merge(Node *p, Node *q)
{
    Node *temp = new Node(-1);
    Node *res = temp;
    
    while(p && q)
    {
        if(p -> data < q -> data)
        {
            temp -> bottom = p;
            temp = temp -> bottom;
            p = p -> bottom;
        }
        
        else {
            temp -> bottom = q;
            temp = temp -> bottom;
            q = q -> bottom;
        }
    }
    if(p) temp -> bottom = p;
    else temp -> bottom = q;
    
    
    return res -> bottom;
}

Node *flatten(Node *root)
{
   if(!root || !root -> next) return root;
   
   //recur for all lists
   root -> next = flatten(root -> next);
   
   // merge the two lists
   root = merge(root , root -> next);
   
   return root;
}
