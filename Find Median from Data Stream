Example 1:

Input
["MedianFinder", "addNum", "addNum", "findMedian", "addNum", "findMedian"]
[[], [1], [2], [], [3], []]
Output
[null, null, null, 1.5, null, 2.0]

Explanation
MedianFinder medianFinder = new MedianFinder();
medianFinder.addNum(1);    // arr = [1]
medianFinder.addNum(2);    // arr = [1, 2]
medianFinder.findMedian(); // return 1.5 (i.e., (1 + 2) / 2)
medianFinder.addNum(3);    // arr[1, 2, 3]
medianFinder.findMedian(); // return 2.0


// Time complexity : O(logn)
// Space complexity : O(1)
class MedianFinder {
public:
    /** initialize your data structure here. */
    
    priority_queue<int> small, large;
    MedianFinder() {
    }
    
    void addNum(int num) {
        
        small.push(num);
        large.push(-small.top()); small.pop();
        
        if(small.size() < large.size())
        {
            small.push(-large.top());
            large.pop();
        }

     }
    
    double findMedian() {
        
        return small.size() > large.size() ? small.top() : (small.top() - large.top()) / 2.0;
    }
};
