eg 1:
i/p : abc 
o/p : ba

eg 2:
i/p : Asdfdsdfg 
o/p : fdsdfdsa


#include <bits/stdc++.h>
using namespace std;

bool ispalin(string str)
{
	int s = 0, e = str.length()-1;
	
	while(s <= e)
	{
		if(str[s] != str[e]) return false;
		
		s++, e--;
	}
	
	return true;
}

void makePalindrome(string str)
{
	// calculate string length
	int n = str.length();
	
	// calculate the middle position (n >> 1 or n / 2)
	int mid = n >> 1;
	
	// check if string mid character with string last character
	// if matches
	if(str[mid] == str[n-1])
	{
		// then definitely , result string will start from mid -1 to 0
		// for eg : a b c c 
		//          0 1 2 3
		// n = 4 , mid = 4/2 = 2 , so str[2] == str[3], then our result will be 1 to 0
		for(int i=mid-1; i>=0; i--)
		cout << str[i] ;
	}
	// if not matches
	else if(str[mid] != str[n-1])
	{
		// take previous of last char
	     int left = n-2;
	     // check for match with last character
	     while(left >= 0 && str[n-1] != str[left])
	     {
	     	left--;
	     }
	     
	     // if no matches found with last character
	     if(left == -1)
	     {
	     	// then our result will be n-2 to 0
	     	for(int i=n-2; i>=0; i--) cout << str[i] ;
	     }
	     else{
	     	// else , result will be left-1 to 0
	     	// eg : m a n o j o n
	     	//      0 1 2 3 4 5 6
	     	// n = 7, mid = 7/2 = 3 , now left will found match at 2 index
	     	 for(int i=left-1; i>=0; i--) cout << str[i] ;
	     }
	}
	
}

int main() {
	// your code goes here

	string s;
	cin >> s;
	
	// if not palindrome
	if(!ispalin(s)) 
	{
		// then make string as palindrome
		makePalindrome(s);
	}
	
	
	
	return 0;
}
