An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.


Example 1:

Input: grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
Output: 1


Example 2:

Input: grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]
Output: 3


class Solution {
public:
    void change(vector<vector<char>>& a,int i,int j)
    {
        int n = a.size() , m = a[0].size();
        
        if(i<0 || i>=n || j<0 || j>=m || a[i][j] == '0')
            return;
        a[i][j] = '0';
        
        change(a,i-1,j);
        change(a,i+1,j);
        change(a,i,j-1);
        change(a,i,j+1);
    }
        
    
    int numIslands(vector<vector<char>>& grid) {
        int x = grid.size(), y = 0, numIslands = 0;
        if(x) y = grid[0].size();
        
        int count = 0;
        
        for(int i=0;i<x;i++)
        {
            for(int j=0;j<y;j++)
            {
                if(grid[i][j] == '1')
                {
                    count++;
                    change(grid,i,j);
                }
            }
        }
        
        return count;
    }
};
