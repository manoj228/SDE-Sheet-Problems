Example 1:

Input:

Output: 0 1 2 3 4
Explanation: 
0 is connected to 1 , 2 , 3.
2 is connected to 4.
so starting from 0, it will go to 1 then 2
then 3.After this 2 to 4, thus bfs will be
0 1 2 3 4.


Example 2:

Input:

Output: 0 1 2
Explanation:
0 is connected to 1 , 2.
so starting from 0, it will go to 1 then 2,
thus bfs will be 0 1 2 3 4. 


// Time complexity : O(V+E)
// space complexity : O(V)
class Solution
{
    public:
    //Function to return Breadth First Traversal of given graph.
	vector<int>bfsOfGraph(int V, vector<int> adj[])
	{
	    vector<bool> vis(V, false);
	    
	    vector<int> res;
	    // queue is used for BFS
	    queue<int> q;
	    q.push(0);
	    
	    while(!q.empty())
	    {
	        int cur = q.front(); q.pop();
	     
	         // make cur as visited
	         vis[cur] = true;
	         
	         // insert cur node as into result
	         res.push_back(cur);
	            
	         for(auto v : adj[cur])
	         {
	             // if not visited adjacent,
	            if(!vis[v])
	            {
	                // insert into queue and mark as visited
	                q.push(v);
	                vis[v] = true;   
	            }
	            
	         }
	        
	    }
	    
	    return res;
	}
};
