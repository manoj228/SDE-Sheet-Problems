Example 1:

Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]

Example 2:

Input: root = [1]
Output: [[1]]

Example 3:

Input: root = []
Output: []



// time complexity : O(n)
// space complexity : O(n)
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        if(!root) return {};
        vector<vector<int>> res;
        
        deque<TreeNode *> dq;
        dq.push_back(root);
        
        bool flag = false;
        while(!dq.empty())
        {
            int n = dq.size();
            vector<int> temp;
            
            while(n--)
            {
                if(flag)
                {
                    TreeNode *cur = dq.back(); dq.pop_back();
                    
                    temp.push_back(cur -> val);
                    
                    if(cur -> right) dq.push_front(cur -> right);
                    
                    if(cur -> left) dq.push_front(cur -> left);                       
                    
                }
                else{
                    TreeNode *cur = dq.front(); dq.pop_front();
                    
                    temp.push_back(cur -> val);
                    
                    if(cur -> left) dq.push_back(cur -> left);
                        
                    if(cur -> right) dq.push_back(cur -> right);
                }
            }
           
            flag = !flag;
            res.push_back(temp);
        }
        
        
        return res;
    }
};
