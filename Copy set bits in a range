Example 1:

Input: 
X = 44, Y = 3 
L = 1,  R = 5
Output: 47
Explaination: presenation of 44 and 3 are 
101100 and 11. So in the range 1 to 5 there 
are two set bits. If those are set in 44 
it will become 101111 = 47.

Example 2:

Input: 
X = 16, Y = 2
L = 1,  R = 3
Output: 18
Explaination: representation of 16 and 2 
are 10000 and 10. If the mentioned rule is 
followed then 16 will become 10010 = 18.



1) First solution
// time complexity : O(r - l)
// space complexity : O(1)
class Solution{
    public:
    int setSetBit(int x, int y, int l, int r){
        // code here
        
        for(int i=l; i<=r; i++)
        {
            // find masking
            int mask = (1 << (i-1));
            
            // in y, if the bit is set, then mask it with x
            if(y & mask) x |= mask;
        }
        
        return x;
    }
};

2) Alternate solution
// time complexity : O(log(r - l))
// space complexity : O(1)
class Solution{
    public:
    int setSetBit(int x, int y, int l, int r){
        
        // find mask range 
        int mask = (1 << (r-l+1)) - 1;
        
        if(r-l+1 == 32)
        mask = (1 << 31) - 1;
             
        // in y, if the bit is set, then mask it with x
        mask = ((mask)<<(l-1)) & y ;
        
        x = x | mask;
        
        
        return x ;
    }
};


