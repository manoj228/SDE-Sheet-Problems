Example 1:

Input:
Stack: 3 2 1
Output: 3 2 1
Example 2:

Input:
Stack: 11 2 32 3 41
Output: 41 32 11 3 2


Time Complexity: O(N*N)
Auxilliary Space: O(N) recursive.


void SortedStack :: sort()
{
   if(s.size() == 0 || s.size() == 1) return;
   
   int top = s.top(); s.pop();
 
   sort();
   
   if(top >= s.top()) s.push(top);
   else{
       int t = s.top(); s.pop();
       s.push(top);
       sort();
       s.push(t);
   }
   

}
