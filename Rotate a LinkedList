Example 1:
Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]

Example 2:
Input: head = [0,1,2], k = 4
Output: [2,0,1]


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        
         if(!head) return head;
        
        int len=1; // number of nodes
        ListNode *newH, *tail;
        newH=tail=head;
         
        // get the number of nodes in the list
        while(tail->next) tail = tail->next,  len++;
        
        // circle the link
        tail->next = head; 

        if(k %= len) 
            // the tail node is the (len-k)-th node (1st node is head)
            for(auto i=0; i<len-k; i++) tail = tail->next; 
        
        newH = tail->next; 
        tail->next = NULL;
        
        return newH;
    }
};
