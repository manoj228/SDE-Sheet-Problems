Example 1:
Input: root = [2,1,3]
Output: true

Example 2:
Input: root = [5,1,4,null,null,3,6]
Output: false
Explanation: The root node's value is 5 but its right child's value is 4.

// Time complexity : O(n)
// Space complexity : O(1)
class Solution {
public:
    bool isValid(TreeNode *root, long long l, long long h)
    {
        if(!root) return true;
        
        // l denotes left node val and h denotes right node val
        if(root -> val <= l || root->val >= h) return false;
        
        // recursion for left and right subtree
        return isValid(root->left, l, root->val) && 
               isValid(root->right, root->val, h);
    }
    bool isValidBST(TreeNode* root) {
        
        return isValid(root, LLONG_MIN, LLONG_MAX);
    }
};
