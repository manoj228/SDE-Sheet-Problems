Example 1:
Input: nums = [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.

Example 2:
Input: nums = [1,0,1,1,0,1]
Output: 2

1) // Brute Force Solution
// we can use two for loops and count the consecutive ones and update it

// Time complexity : O(n*n)
// space complexity :O(1)

2) // optimal solution is 2-pointer approach

// Time complexity : O(n)
// space complexity :O(1)

class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        
        int c = 0 , maxone = 0;
        for(int i=0; i<nums.size(); i++)
        {
            // increment the counter when cur ele is 1
            if(nums[i] == 1)
                c++;
            
            // reset the counter when cur ele is 0
            else if(nums[i] == 0)
                c = 0;
            
            // update the max consecutive ones
             maxone = max(maxone, c);
        }
        
        return maxone;
    }
};
