Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.

Example 2:
Input: l1 = [0], l2 = [0]
Output: [0]

Example 3:
Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1) return l2;
        if(!l2) return l1;
        
        ListNode *res = NULL;
        ListNode *temp ;
        
        int sum = 0, carry = 0 ;
        
        // running loop until all condition fails
        while(l1 || l2 || carry)
        {
            // initialize to zero for every iteration
            sum = 0;
            
            // l1 present
            if(l1)
            {
                sum += l1 -> val;
                l1 = l1 -> next;
            }
            
            // l2 present
            if(l2)
            {
                sum += l2 -> val;
                l2 = l2 -> next;
            }
            
            // adding sum with carry
            sum += carry;
            
            // creating res node
            if(!res)
            {
                res = new ListNode(sum % 10);
                temp = res;      
            }
            else{
                temp -> next = new ListNode(sum % 10);
                temp = temp -> next;
            }
        
            carry = sum / 10;
            
        }
       
        return res;
    }
};
