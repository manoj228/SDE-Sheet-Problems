With Recursion:
class Solution {
    private:
    void helper(TreeNode* root, vector<int> &res)
    {
        if(!root)
            return;
        
        helper(root -> left, res);
        
        res.push_back(root -> val);
        
        helper(root -> right, res);
    }
    
public:
    vector<int> inorderTraversal(TreeNode* root) {
        
        vector<int> res;
        
        helper(root, res);
        
        return res;
    }
};


Without Recursion:
class Solution {
    
public:
    vector<int> inorderTraversal(TreeNode* root) {
        
        vector<int> res;
        
        stack<TreeNode*> st;
        
        TreeNode *cur = root;
        
        while(1)
        {
            while(cur)
            {
                st.push(cur);
                
                cur = cur -> left;
            }
            
            if(st.empty())
                break;
            
            cur = st.top();
            st.pop();
            
            res.push_back(cur -> val);
            
            cur = cur -> right;
        }
        
        return res;
    }
};
