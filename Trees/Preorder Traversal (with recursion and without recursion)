With Recursion:
class Solution {
    private:
    void helper(TreeNode *root, vector<int> &res)
    {
        if(!root)
            return;
        
        res.push_back(root -> val);
        
        helper(root -> left, res);
        
        helper(root -> right, res);
    }
    
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        vector<int> res;
        
        helper(root, res);
        
        return res;
    }
};

Without Recursion:
class Solution {
    private:
    void helper(TreeNode *root, vector<int> &res)
    {   
        if(!root)
            return;
        
        stack<TreeNode*> st;
        st.push(root);
        
        while(!st.empty())
        {
            TreeNode *cur = st.top(); st.pop();
            
            res.push_back(cur -> val);
            
            if(cur -> right)
                st.push(cur -> right);
            
            if(cur -> left)
                st.push(cur -> left);
        }
    }
    
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        vector<int> res;
        
        helper(root, res);
        
        return res;
    }
};
