Example 1:
Input: root = [1,2,2,3,4,4,3]
Output: true

Example 2:
Input: root = [1,2,2,null,3,null,3]
Output: false

// Time complexity : O(n)
// Space complexity : O(1)
class Solution {
public:
    bool checkSymmetric(TreeNode *p, TreeNode *q)
    {
        if(!p && !q) return true;
        
        if(!p || !q) return false;
        
        return (p->val == q->val && checkSymmetric(p->left, q->right)
               && checkSymmetric(p->right, q->left));
    }
    
    bool isSymmetric(TreeNode* root) {
        if(!root) return true;
        
        return checkSymmetric(root -> left, root -> right);
    }
};
